#include <iostream>
#include<bits/stdc++.h>
using namespace std;




int n;
bool vis[100];
vector<int>v[100]; //or vector<vector<int>>v(100);



bool isHamiltonian(int i,int count)
{
    vis[i]=true;

    if(count==n)
    return true;
    for(int x:v[i])
    {
        if(!vis[x])
        {
            bool flag=isHamiltonian(x,count+1);
            if(flag)
            return true;
        }
    }
    vis[i]=false;
    return false;
}
int main() {
	//code
		int t,m,flag,x,y;
	cin>>t;
	while(t--)
	{
		flag=0;
		memset(vis,false,sizeof(vis));
		cin>>n>>m;
		for(int i=0;i<m;i++)
		{
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
		}
		for(int i=1;i<=n;i++)
		{
        if(isHamiltonian(i,1))
        {
        	flag=1;
        	cout<<1<<endl;
        	break;
		}
		else
		{
			memset(vis,false,sizeof(vis));
		}}
			if(flag==0)
		cout<<0<<endl;
        for(int i=0;i<=n;i++)
        v[i].clear();
	}
	return 0;
}