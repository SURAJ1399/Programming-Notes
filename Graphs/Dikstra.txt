int mindist(int dist[],bool vis[],int n)
{
    int min=INT_MAX,ind;
    for(int i=0;i<n;i++)
        if(vis[i]==false && dist[i]<=min)
        {
            min=dist[i];
            ind=i;
        }
    return ind;
}
void dijkstra(int graph[MAX][MAX], int s,int v)
{
    int dist[v];
    for(int i=0;i<v;i++)
        dist[i]=INT_MAX;
    bool vis[v]={false};
    dist[s]=0;
    for(int i=0;i<v-1;i++)
    {
        int u=mindist(dist,vis,v);
        vis[u]=true;
        for(int j=0;j<v;j++)
            if(!vis[j] && graph[u][j] && dist[u]!=INT_MAX && dist[u]+graph[u][j]<dist[j])
                dist[j]=dist[u]+graph[u][j];
    }
    for(int i=0;i<v;i++)
        cout<<dist[i]<<" ";
}