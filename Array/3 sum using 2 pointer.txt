class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
    if(nums.size()==0 ||nums.size()==1 ||nums.size()==2)
    {
        return ans;
    }
      for(int i=0;i<nums.size()-2;i++)
      {
          
          if (i == 0 || (i > 0 && nums[i] != nums[i-1])) { 
              //above if condition is to prevent dulicate pairs
              
          int low=i+1,high=nums.size()-1;
          
          //low=b ,high=c bcoz b+c=-a
          
          int sum=0-nums[i];
          while(low<high)
          {
              if(nums[low]+nums[high]==sum)
              {
                  
                         vector<int> temp; 
                        temp.push_back(nums[i]); 
                        temp.push_back(nums[low]); 
                        temp.push_back(nums[high]); 
                        ans.push_back(temp);
                     
                  
                      while (low < high && nums[low] == nums[low+1]) low++;
                        while (low < high && nums[high] == nums[high-1]) high--;
                  
                  low++;
                  high--;
                  
                  
              }
              else if(nums[low]+nums[high]>sum)
                  high--;
              else
                  low++;
              
          }
      }
      }
        return ans;
    }
};